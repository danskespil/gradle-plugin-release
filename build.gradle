buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.8"
    }
}
plugins {
    id "java-gradle-plugin"
    id 'com.adarshr.test-logger' version '1.1.2'
    id 'org.ajoberstar.grgit' version '1.7.2'
    id 'org.ajoberstar.release-base' version '1.7.2'
    // I need the release opinion plugin, but since its part of release-base, Its present when using plugin
    // release-base. Its loaded directly in ReleaseClassicPlugin
    // id 'org.ajoberstar.release-opinion' version '1.7.2'
}

// BEGIN Allow plugin to use itself
def classpaths = [file('src/main/groovy').absolutePath, file('src/main/resources').absolutePath]
// The groovy script engine wants a string array
String[] classpathArray = classpaths.toArray(new String[classpaths.size()])
// Start a groovy script engine with our classpaths
def engine = new GroovyScriptEngine(classpathArray, this.getClass().getClassLoader())
// Now we can load the plugin script
def thisPlugin = engine.loadScriptByName('dk/danskespil/gradle/plugins/release/ReleaseBranchPlugin.groovy')
apply plugin: thisPlugin
// END Allow plugin to use itself

group 'dk.danskespil.gradle.plugins'

apply plugin: 'groovy'

gradlePlugin {
    plugins {
        releaseClassicPlugin {
            id = "dk.danskespil.gradle.plugins.release-classic"
            implementationClass = 'dk.danskespil.gradle.plugins.release.ReleaseClassicPlugin'
        }
        releaseBranchPlugin {
            id = "dk.danskespil.gradle.plugins.release-branch"
            implementationClass = 'dk.danskespil.gradle.plugins.release.ReleaseBranchPlugin'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = "4.4.1"
}

repositories {
    jcenter()
}

dependencies {
    compile 'org.ajoberstar:gradle-git:1.7.2'
    compile 'dk.danskespil.gradle.plugins:gradle-task-helpers:0.0.3'
    testCompile 'dk.danskespil.gradle.plugins:gradle-plugin-test-spock-helpers:0.1.2'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude module: 'groovy-all'
    }
    testCompile 'junit:junit:4.12'
}

// Deploy this to gradle plugin platform. You need an account to do this
apply plugin: "com.gradle.plugin-publish"
pluginBundle {
    website = 'https://github.com/danskespil/gradle-plugin-release'
    vcsUrl = 'https://github.com/danskespil/gradle-plugin-release'
    description = 'Release plugin'

    plugins {
        releaseClassicPlugin {
            id = 'dk.danskespil.gradle.plugins.release-classic'
            displayName = 'Release plugin classic'
            description = 'Handles releasing with versions, takes care of tagging in git and inference of version numbers. Based on ajoberstar gradle plugins and inspired by netflix nebula gradle plugin. Slightly opiniated'
            tags = ['release', 'nebula', 'danskespil']
        }
        releaseBranchPlugin {
            id = 'dk.danskespil.gradle.plugins.release-branch'
            displayName = 'Release plugin branch'
            description = 'Handles releasing with versions, takes care of tagging in git and inference of version numbers. Based on ajoberstar gradle plugins and inspired by netflix nebula gradle plugin. Slightly opiniated. Can add branch names into tags and inferred versions'
            tags = ['release', 'nebula', 'danskespil']
        }
    }
}
